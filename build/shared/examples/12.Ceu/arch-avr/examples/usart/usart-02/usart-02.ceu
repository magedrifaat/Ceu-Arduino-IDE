// compile with CEU_DEFS=-DCEU_PM_MIN

#include "wclock.ceu"

native/const _USART_TX_vect, _USART0_TX_vect;

native/pre do
#ifdef __AVR_ATmega644P__
    ##define BAUD_USART(baud_human) (((F_CPU / (baud_human * 16UL))) - 1)
#else
    ##define BAUD_USART(baud_human) ((F_CPU / 4 / baud_human - 1) / 2)
#endif
end

input none USART_TX;
#ifdef ARDUINO_BOARD_MEGA
spawn async/isr [_USART0_TX_vect,0] do
#else
spawn async/isr [_USART_TX_vect,0] do
#endif
    emit USART_TX;
end

{
    UCSR0A = 1 << U2X0;

    UBRR0H = (BAUD_USART(9600)>>8);     // set baud rate
    UBRR0L = (BAUD_USART(9600));
    UCSR0C = (1<<USBS0)|(3<<UCSZ00);    // 8data, 2stop-bit
    UCSR0B = (1<<RXEN0)  | (1<<TXEN0)   // enable RX/TX
           | (1<<RXCIE0) | (1<<TXCIE0); // enable interrupts
}
do finalize with
    {UCSR0B = 0;}                       // disable TX/RX & interrups
end

loop do
    await 1s;

    {ceu_assert(UCSR0A & (1<<UDRE0), "bug found");}
    {UDR0 = 'h';}
    await USART_TX;
    {UDR0 = 'e';}
    await USART_TX;
    {UDR0 = 'l';}
    await USART_TX;
    {UDR0 = 'l';}
    await USART_TX;
    {UDR0 = 'o';}
    await USART_TX;
    {UDR0 = '\n';}
    await USART_TX;
    {UDR0 = '\r';}
    await USART_TX;
end
